#!/usr/bin/env python3
"""
Script de prueba para verificar Piano Digital y An√°lisis Cognitivo
"""

import sys
import tkinter as tk
sys.path.append('app')

def test_piano_analytics():
    """Probar que el Piano Digital aparece y el an√°lisis funciona"""
    print("üß™ === PRUEBA PIANO DIGITAL + AN√ÅLISIS ===")
    
    try:
        # 1. Verificar registro de juegos
        from managers.components.game_registry import GameRegistry
        registry = GameRegistry()
        
        print(f"üéÆ Juegos registrados: {list(registry.available_games.keys())}")
        print(f"üß™ Juegos con test mode: {registry.get_games_with_test_mode()}")
        
        # 2. Verificar que piano_digital est√° registrado
        if "piano_digital" in registry.available_games:
            print("‚úÖ Piano Digital est√° registrado correctamente")
        else:
            print("‚ùå Piano Digital NO est√° registrado")
            return False
        
        # 3. Verificar import del sistema cognitivo
        try:
            from core.cognitive import SessionManager
            print("‚úÖ Sistema cognitivo importado correctamente")
        except ImportError as e:
            print(f"‚ùå Error importando sistema cognitivo: {e}")
            return False
        
        # 4. Verificar que existen datos de ejemplo
        import os
        data_dir = "data/cognitive/piano_digital/sessions"
        if os.path.exists(data_dir):
            csv_files = [f for f in os.listdir(data_dir) if f.endswith('.csv')]
            print(f"üìä Archivos de datos encontrados: {len(csv_files)}")
            for f in csv_files:
                print(f"   ‚Ä¢ {f}")
        else:
            print("‚ö†Ô∏è No se encontr√≥ directorio de datos")
        
        # 5. Probar ventana de an√°lisis
        root = tk.Tk()
        root.title("Prueba Piano Digital")
        root.geometry("500x300")
        
        # Bot√≥n para probar an√°lisis
        def test_analytics():
            try:
                from ui.cognitive.cognitive_analytics_window import open_cognitive_analytics
                analytics = open_cognitive_analytics(root, "piano_digital")
                if analytics:
                    print("‚úÖ Ventana de an√°lisis abierta correctamente")
                else:
                    print("‚ö†Ô∏è Ventana de an√°lisis no se pudo abrir")
            except Exception as e:
                print(f"‚ùå Error abriendo an√°lisis: {e}")
        
        # Interfaz de prueba
        title_label = tk.Label(
            root,
            text="üéπ PRUEBA PIANO DIGITAL",
            font=("Arial", 16, "bold"),
            fg="#2c3e50"
        )
        title_label.pack(pady=20)
        
        info_label = tk.Label(
            root,
            text="Verificaciones realizadas:\n"
                 "‚úÖ Piano Digital registrado\n"
                 "‚úÖ Sistema cognitivo disponible\n"
                 "‚úÖ Datos de ejemplo cargados",
            font=("Arial", 10),
            justify=tk.LEFT
        )
        info_label.pack(pady=10)
        
        analytics_btn = tk.Button(
            root,
            text="üìà Probar An√°lisis Cognitivo",
            command=test_analytics,
            bg="#3498db",
            fg="white",
            font=("Arial", 12, "bold"),
            padx=20,
            pady=10
        )
        analytics_btn.pack(pady=20)
        
        close_btn = tk.Button(
            root,
            text="‚ùå Cerrar",
            command=root.destroy,
            bg="#e74c3c",
            fg="white",
            font=("Arial", 10),
            padx=20,
            pady=5
        )
        close_btn.pack(pady=10)
        
        print("‚úÖ Interfaz de prueba creada")
        print("üìä Haz clic en 'Probar An√°lisis Cognitivo' para ver las gr√°ficas")
        
        root.mainloop()
        
        print("‚úÖ Prueba completada")
        return True
        
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_piano_analytics()
    print(f"\n{'‚úÖ √âXITO' if success else '‚ùå FALLO'}: Piano Digital {'FUNCIONA' if success else 'NO FUNCIONA'}")
    sys.exit(0 if success else 1) 